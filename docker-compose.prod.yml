version: '2'

services:

  web:
    container_name: web
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    image: index.docker.io/oneandonly1337/kontorshund:latest
    command: gunicorn kontorshund.wsgi:application --bind 0.0.0.0:8000 
    volumes:
      - static_volume:/home/dockeruser/web/staticfiles
      - media_volume:/home/dockeruser/web/mediafiles
      - /home/kontorshund/kontorshund/Certificates_prod:/home/dockeruser/web/Certificates_prod
    expose:
      - 8000
    env_file:
      - ./.env.prod
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
    network_mode: bridge

  
  nginx-proxy:
    container_name: nginx-proxy
    restart: always
    build: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/home/dockeruser/web/staticfiles
      - media_volume:/home/dockeruser/web/mediafiles

      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      #- certs:/etc/nginx/certs
      - certs:/etc/nginx/certs:ro

      - /var/run/docker.sock:/tmp/docker.sock:ro
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
    network_mode: bridge
  
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:ro
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    network_mode: bridge
  # nginx-proxy-letsencrypt:
  #   container_name: nginx-proxy-letsencrypt
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   env_file:
  #     - ./.env.prod.proxy-companion
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - certs:/etc/nginx/certs
  #     - html:/usr/share/nginx/html
  #     - vhost:/etc/nginx/vhost.d
  #     - acme:/etc/acme.sh
  #   depends_on:
  #     - nginx-proxy
  #   network_mode: bridge


  watchtower:
    container_name: watchtower
    restart: unless-stopped
    image: containrrr/watchtower 
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /home/kontorshund/.docker/config.json:/config.json
    env_file:
      - ./.env.prod
    command: --interval 120  --label-enable --warn-on-head-failure never
    network_mode: bridge

  scheduler:
    container_name: scheduler
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    image: index.docker.io/oneandonly1337/kontorshund:latest
    command: /bin/sh -c "/home/dockeruser/web/cron_startup.sh" 
    volumes:
      - ./crontab:/crontab:ro
      - static_volume:/home/dockeruser/web/staticfiles
      - media_volume:/home/dockeruser/web/mediafiles
      - /home/kontorshund/kontorshund/Certificates_prod:/home/dockeruser/web/Certificates_prod
    env_file:
      - ./.env.prod
    network_mode: bridge


volumes:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
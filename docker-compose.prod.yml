version: '3.8'

services:

  web:
    container_name: web
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    image: index.docker.io/oneandonly1337/kontorshund:latest
    command: gunicorn kontorshund.wsgi:application --bind 0.0.0.0:8000 
    volumes:
      - static_volume:/home/dockeruser/web/staticfiles
      - media_volume:/home/dockeruser/web/mediafiles
      - /home/kontorshund/kontorshund/Certificates_prod:/home/dockeruser/web/Certificates_prod
    expose:
      - 8000
    env_file:
      - ./prod.env
    environment:
      - VIRTUAL_HOST=kontorshund.se, www.kontorshund.se
      - LETSENCRYPT_HOST=kontorshund.se, www.kontorshund.se
      - VIRTUAL_PORT=8000
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
    network_mode: bridge

  matomo:
    container_name: matomo
    image: matomo
    ports:
      - 8080:80
    environment:
      - VIRTUAL_HOST=stats.kontorshund.se
      - LETSENCRYPT_HOST=stats.kontorshund.se
      - LETSENCRYPT_EMAIL=alexlindgren08@gmail.com
    env_file:
      - ./prod.env
    # networks:
    #   - proxy
    #   - net
    depends_on:
      - matomo_db
    restart: unless-stopped
    network_mode: bridge

  matomo_db:
    container_name: matomo_db
    image: mariadb
    command: --max-allowed-packet=64MB
    environment:
      - MYSQL_ROOT_PASSWORD=akjwnd123298dankw
    env_file:
      - ./db.env
    # networks:
    #   - net
    restart: unless-stopped
    network_mode: bridge

  nginx-proxy:
    container_name: nginx-proxy
    restart: always
    build: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/home/dockeruser/web/staticfiles
      - media_volume:/home/dockeruser/web/mediafiles

      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      #- certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    logging:
      driver: "json-file"
      options:
          max-size: "100m"
    network_mode: bridge 


  nginx-proxy-letsencrypt:
    container_name: nginx-proxy-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./prod.proxy-companion.env
    environment:
      - TZ=Europe/Stockholm
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
    network_mode: bridge

  watchtower:
    container_name: watchtower
    restart: unless-stopped
    image: containrrr/watchtower 
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - /home/kontorshund/.docker/config.json:/config.json
    env_file:
      - ./prod.env
    environment:
      - TZ=Europe/Stockholm
    command: --interval 120  --label-enable --warn-on-head-failure never
    network_mode: bridge

  scheduler:
    container_name: scheduler
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    image: index.docker.io/oneandonly1337/kontorshund:latest
    command: /bin/sh -c "/home/dockeruser/web/cron_startup.sh" 
    volumes:
      - ./crontab:/crontab:ro
      - static_volume:/home/dockeruser/web/staticfiles
      - media_volume:/home/dockeruser/web/mediafiles
      - /home/kontorshund/kontorshund/Certificates_prod:/home/dockeruser/web/Certificates_prod
    env_file:
      - ./prod.env
    network_mode: bridge


volumes:
 # conf:
  vhost:
  html:
  certs:
  acme:
  static_volume:
  media_volume:

# networks:
#   proxy:
#     external:
#       name: nginx-proxy
#   net:
#     driver: bridge